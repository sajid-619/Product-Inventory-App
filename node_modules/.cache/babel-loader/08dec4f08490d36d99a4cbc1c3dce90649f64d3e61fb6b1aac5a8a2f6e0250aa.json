{"ast":null,"code":"var _jsxFileName = \"D:\\\\test-assignment\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Layout, Typography } from 'antd';\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from '@apollo/client';\nimport Products from './Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content\n} = Layout;\nconst {\n  Title\n} = Typography;\nconst createApolloClient = () => {\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: 'http://localhost:8080/v1/graphql'\n    }),\n    cache: new InMemoryCache()\n  });\n};\nfunction App() {\n  _s();\n  const [client] = useState(createApolloClient());\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        style: {\n          height: '100vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            style: {\n              color: 'white',\n              margin: 0,\n              textAlign: 'left'\n            },\n            children: \"Inventory App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          style: {\n            padding: '1em'\n          },\n          children: /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Sk7uI56oRQ9xCCbctPhxxIt6Uxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Layout","Typography","ApolloClient","ApolloProvider","InMemoryCache","HttpLink","Products","jsxDEV","_jsxDEV","Header","Content","Title","createApolloClient","link","uri","cache","App","_s","client","children","className","style","height","display","alignItems","color","margin","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","padding","_c","$RefreshReg$"],"sources":["D:/test-assignment/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport { Layout, Typography } from 'antd';\n\n\nimport { ApolloClient, ApolloProvider, InMemoryCache, HttpLink } from '@apollo/client';\nimport  Products  from './Products';\n\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\n const createApolloClient = () => {\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: 'http://localhost:8080/v1/graphql',\n    }),\n    cache: new InMemoryCache(),\n  });\n };\n\nfunction App() {\n\n  const [client] = useState(createApolloClient());\n\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <Layout style={{ height: '100vh' }}>\n          <Header style={{ display: 'flex', alignItems: 'center'}}>\n            <Title style={{ color: 'white', margin: 0, textAlign: 'left' }}>Inventory App</Title>\n          </Header>\n          <Content style={{ padding: '1em'}}>\n            <Products />\n          </Content>\n        </Layout>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAElB,SAASC,MAAM,EAAEC,UAAU,QAAQ,MAAM;AAGzC,SAASC,YAAY,EAAEC,cAAc,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACtF,OAAQC,QAAQ,MAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAM;EAAEC,MAAM;EAAEC;AAAQ,CAAC,GAAGV,MAAM;AAClC,MAAM;EAAEW;AAAM,CAAC,GAAGV,UAAU;AAE3B,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;EAChC,OAAO,IAAIV,YAAY,CAAC;IACtBW,IAAI,EAAE,IAAIR,QAAQ,CAAC;MACjBS,GAAG,EAAE;IACP,CAAC,CAAC;IACFC,KAAK,EAAE,IAAIX,aAAa,CAAC;EAC3B,CAAC,CAAC;AACH,CAAC;AAEF,SAASY,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,CAAC,GAAGnB,QAAQ,CAACa,kBAAkB,CAAC,CAAC,CAAC;EAE/C,oBACEJ,OAAA,CAACL,cAAc;IAACe,MAAM,EAAEA,MAAO;IAAAC,QAAA,eAC7BX,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBX,OAAA,CAACR,MAAM;QAACqB,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAQ,CAAE;QAAAH,QAAA,gBACjCX,OAAA,CAACC,MAAM;UAACY,KAAK,EAAE;YAAEE,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAQ,CAAE;UAAAL,QAAA,eACtDX,OAAA,CAACG,KAAK;YAACU,KAAK,EAAE;cAAEI,KAAK,EAAE,OAAO;cAAEC,MAAM,EAAE,CAAC;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAAR,QAAA,EAAC;UAAa;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E,CAAC,eACTvB,OAAA,CAACE,OAAO;UAACW,KAAK,EAAE;YAAEW,OAAO,EAAE;UAAK,CAAE;UAAAb,QAAA,eAChCX,OAAA,CAACF,QAAQ;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACd,EAAA,CAlBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
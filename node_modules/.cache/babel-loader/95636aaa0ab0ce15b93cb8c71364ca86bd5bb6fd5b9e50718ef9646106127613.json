{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@apollo/client';\nimport { PRODUCTS_QUERY } from '../graphql/productsQuery';\nconst useTotalValue = () => {\n  _s();\n  const {\n    data\n  } = useQuery(PRODUCTS_QUERY);\n  const calculateTotalValue = () => {\n    const products = (data === null || data === void 0 ? void 0 : data.products) || [];\n    return products.reduce((total, product) => {\n      return total + product.stock * product.price;\n    }, 0);\n  };\n  return calculateTotalValue;\n};\n_s(useTotalValue, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\nexport default useTotalValue;","map":{"version":3,"names":["useQuery","PRODUCTS_QUERY","useTotalValue","_s","data","calculateTotalValue","products","reduce","total","product","stock","price"],"sources":["D:/test-assignment/src/hooks/useTotalValue.ts"],"sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport { PRODUCTS_QUERY } from '../graphql/productsQuery';\r\n\r\nconst useTotalValue = () => {\r\n  const { data } = useQuery(PRODUCTS_QUERY);\r\n\r\n  const calculateTotalValue = () => {\r\n    const products = data?.products || [];\r\n    return products.reduce((total: number, product: any) => {\r\n      return total + product.stock * product.price;\r\n    }, 0);\r\n  };\r\n\r\n  return calculateTotalValue;\r\n};\r\n\r\nexport default useTotalValue;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAK,CAAC,GAAGJ,QAAQ,CAACC,cAAc,CAAC;EAEzC,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,QAAQ,GAAG,CAAAF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,QAAQ,KAAI,EAAE;IACrC,OAAOA,QAAQ,CAACC,MAAM,CAAC,CAACC,KAAa,EAAEC,OAAY,KAAK;MACtD,OAAOD,KAAK,GAAGC,OAAO,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK;IAC9C,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,OAAON,mBAAmB;AAC5B,CAAC;AAACF,EAAA,CAXID,aAAa;EAAA,QACAF,QAAQ;AAAA;AAY3B,eAAeE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}